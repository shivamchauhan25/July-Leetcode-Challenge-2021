Find K Closest Elements

Given a sorted integer array arr, two integers k and x, return the k closest integers to x in the array. The result should also be sorted in ascending order.

An integer a is closer to x than an integer b if:

|a - x| < |b - x|, or
|a - x| == |b - x| and a < b
 

Example 1:

Input: arr = [1,2,3,4,5], k = 4, x = 3
Output: [1,2,3,4]
Example 2:

Input: arr = [1,2,3,4,5], k = 4, x = -1
Output: [1,2,3,4]
 

Constraints:

1 <= k <= arr.length
1 <= arr.length <= 104
arr is sorted in ascending order.
-104 <= arr[i], x <= 104

Solution:
Python:

class Solution:
    def findClosestElements(self, arr: List[int], k: int, x: int) -> List[int]:   #[1,2,3,4,5],4,3
        lol=collections.defaultdict(list)                                    
        c,d=0,len(arr)-1
        lis=[]
        for i in arr:
            lol[abs(i-x)].append(i)                                         #{2:[1,5],1:[2,4],0:[3]}
        for i in sorted(lol):                    #Sorting because we want variables with least difference first
            for j in lol[i]:
                if len(lis)<k:
                    lis+=[j]
                else:
                    return sorted(lis)                         #[1,2,3,4]

        return sorted(lis)
